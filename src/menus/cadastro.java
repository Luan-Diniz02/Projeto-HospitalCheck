/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menus;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.Date;
import sistema_de_visitas.Acompanhante;
import sistema_de_visitas.Conexao;

/**
 *
 * @author Luan Diniz
 */
public class cadastro extends javax.swing.JFrame {

    /**
     * Creates new form cadastro
     */
    public cadastro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idade_cadastro = new javax.swing.JFormattedTextField();
        nome_cadastro = new javax.swing.JFormattedTextField();
        cpf_cadastro = new javax.swing.JFormattedTextField();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        cadastrar_acompanhante = new javax.swing.JButton();
        sexo_cadastro = new javax.swing.JComboBox<>();
        categoria_cadastro = new javax.swing.JComboBox<>();
        jFormattedTextField5 = new javax.swing.JFormattedTextField();
        jFormattedTextField6 = new javax.swing.JFormattedTextField();
        jFormattedTextField7 = new javax.swing.JFormattedTextField();
        jFormattedTextField8 = new javax.swing.JFormattedTextField();
        voltar_cadastro = new javax.swing.JButton();
        jFormattedTextField9 = new javax.swing.JFormattedTextField();
        cpf_consulta = new javax.swing.JFormattedTextField();
        consultar = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        horario_cadastro = new javax.swing.JComboBox<>();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        nome_paciente = new javax.swing.JFormattedTextField();
        data_cadastro = new com.toedter.calendar.JDateChooser();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TELA DE CADASTRO");
        setMinimumSize(new java.awt.Dimension(600, 400));
        setSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(null);

        idade_cadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        idade_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idade_cadastroActionPerformed(evt);
            }
        });
        getContentPane().add(idade_cadastro);
        idade_cadastro.setBounds(80, 230, 80, 22);

        nome_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nome_cadastroActionPerformed(evt);
            }
        });
        nome_cadastro.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nome_cadastroPropertyChange(evt);
            }
        });
        getContentPane().add(nome_cadastro);
        nome_cadastro.setBounds(80, 140, 160, 22);

        try {
            cpf_cadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpf_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpf_cadastroActionPerformed(evt);
            }
        });
        getContentPane().add(cpf_cadastro);
        cpf_cadastro.setBounds(80, 170, 160, 22);

        jFormattedTextField4.setEditable(false);
        jFormattedTextField4.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextField4.setText("CPF");
        jFormattedTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField4ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField4);
        jFormattedTextField4.setBounds(20, 170, 50, 22);

        cadastrar_acompanhante.setText("CADASTRAR");
        cadastrar_acompanhante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrar_acompanhanteActionPerformed(evt);
            }
        });
        getContentPane().add(cadastrar_acompanhante);
        cadastrar_acompanhante.setBounds(290, 260, 110, 23);

        sexo_cadastro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino" }));
        sexo_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexo_cadastroActionPerformed(evt);
            }
        });
        getContentPane().add(sexo_cadastro);
        sexo_cadastro.setBounds(80, 200, 100, 22);

        categoria_cadastro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acompanhante", "Visitante" }));
        categoria_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoria_cadastroActionPerformed(evt);
            }
        });
        getContentPane().add(categoria_cadastro);
        categoria_cadastro.setBounds(120, 110, 130, 22);

        jFormattedTextField5.setEditable(false);
        jFormattedTextField5.setText("IDADE");
        jFormattedTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField5ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField5);
        jFormattedTextField5.setBounds(20, 230, 50, 22);

        jFormattedTextField6.setEditable(false);
        jFormattedTextField6.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextField6.setText("CATEGORIA");
        jFormattedTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField6ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField6);
        jFormattedTextField6.setBounds(20, 110, 90, 22);

        jFormattedTextField7.setEditable(false);
        jFormattedTextField7.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jFormattedTextField7.setText("NOME");
        jFormattedTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField7ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField7);
        jFormattedTextField7.setBounds(20, 140, 50, 22);

        jFormattedTextField8.setEditable(false);
        jFormattedTextField8.setText("SEXO");
        jFormattedTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField8ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField8);
        jFormattedTextField8.setBounds(20, 200, 50, 22);

        voltar_cadastro.setText("VOLTAR");
        voltar_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltar_cadastroActionPerformed(evt);
            }
        });
        getContentPane().add(voltar_cadastro);
        voltar_cadastro.setBounds(190, 260, 90, 23);

        jFormattedTextField9.setEditable(false);
        jFormattedTextField9.setText("CPF DO PACIENTE");
        jFormattedTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField9ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField9);
        jFormattedTextField9.setBounds(20, 20, 130, 22);

        try {
            cpf_consulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpf_consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpf_consultaActionPerformed(evt);
            }
        });
        getContentPane().add(cpf_consulta);
        cpf_consulta.setBounds(160, 20, 170, 22);

        consultar.setText("BUSCAR");
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });
        getContentPane().add(consultar);
        consultar.setBounds(360, 20, 100, 23);

        jFormattedTextField1.setEditable(false);
        jFormattedTextField1.setText("HORARIO");
        getContentPane().add(jFormattedTextField1);
        jFormattedTextField1.setBounds(290, 140, 70, 22);

        jFormattedTextField2.setEditable(false);
        jFormattedTextField2.setText("DATA");
        getContentPane().add(jFormattedTextField2);
        jFormattedTextField2.setBounds(290, 110, 70, 22);

        horario_cadastro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "16:00 - 17:00" }));
        getContentPane().add(horario_cadastro);
        horario_cadastro.setBounds(370, 140, 120, 22);

        jFormattedTextField3.setEditable(false);
        jFormattedTextField3.setText("NOME DO PACIENTE");
        getContentPane().add(jFormattedTextField3);
        jFormattedTextField3.setBounds(20, 50, 130, 22);

        nome_paciente.setEditable(false);
        getContentPane().add(nome_paciente);
        nome_paciente.setBounds(160, 50, 170, 22);
        getContentPane().add(data_cadastro);
        data_cadastro.setBounds(370, 110, 120, 22);

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo_vs.jpeg"))); // NOI18N
        fundo.setMaximumSize(new java.awt.Dimension(0, 300));
        getContentPane().add(fundo);
        fundo.setBounds(0, -10, 520, 320);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idade_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idade_cadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idade_cadastroActionPerformed

    private void nome_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nome_cadastroActionPerformed


// TODO add your handling code here:
       
    }//GEN-LAST:event_nome_cadastroActionPerformed

    private void cpf_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpf_cadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpf_cadastroActionPerformed

    private void jFormattedTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField4ActionPerformed

    private void sexo_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexo_cadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexo_cadastroActionPerformed

    private void jFormattedTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField5ActionPerformed

    private void categoria_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoria_cadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoria_cadastroActionPerformed

    private void cadastrar_acompanhanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrar_acompanhanteActionPerformed
            
            String jdbcUrl = "jdbc:mysql://localhost:3306/visitas?serverTimezone=America/Sao_Paulo";
            String username = "root";
            String password = "root";
     
            try (Connection connection = DriverManager.getConnection(jdbcUrl, username, password)) {
            
            String tabela = "visitas.acompanhantes_visitantes";       
            String tabela2 ="visitas.paciente";
            
            //recebendo os dados que o usuario inseriu
            String categoria=(String) categoria_cadastro.getSelectedItem();
            String nome=nome_cadastro.getText();
            String cpf=cpf_cadastro.getText();
            String sexo=(String) sexo_cadastro.getSelectedItem();
            int idade=Integer.parseInt(idade_cadastro.getText());
            
            Date data=data_cadastro.getDate();
            String horario=(String) horario_cadastro.getSelectedItem();
            String paciente=nome_paciente.getText();
            String cpf_paciente=cpf_consulta.getText();
            
            //validando se todos os dados inseridos estão validos
            if(idade<=0||nome.trim().isEmpty() || cpf.trim().isEmpty()||cpf_consulta.getText().trim().isEmpty()||data==null){
                //um aviso é exibido para o usuario preencher todos os dados corretamente
                JOptionPane.showMessageDialog(null, "Preencha todos os campos com valores validos ");
            }
            //caso estejam o cadastro continua normalmente
            else{    
        //criando um acompanhante
        Acompanhante cadastro = new Acompanhante (nome,cpf,sexo,categoria,idade);
        //iniciando conexao com o banco de dados 
        Conexao conexao = new Conexao();
        //caixa de dialogo lembrando o usuario de conferir todos os dados
        int opcao = JOptionPane.showConfirmDialog(null,"Todos os dados estao corretos ? ","Confirmacao",JOptionPane.YES_NO_OPTION);
        //caso o usuario confirme, o cadastro continua
        if(opcao == JOptionPane.YES_OPTION){                    
            //verificação se o usuario estar tentando cadastrar um novo acompanhante                        
            if(cadastro.getCategoria().equals("Acompanhante")){
            //chamando o método que faz a verificação se já ocorreu uma troca de acompanhante na data recebida
            if(conexao.verificarTrocaAcompanhante(tabela,paciente, connection, data)==false){
            //chamando o método que verifica se o paciente já possui outro acompanhante cadastrado
            if(conexao.verificarAcompanhante(tabela2, cpf_paciente, connection)==true){
            //caso já possua um acompanhante cadastrado, é perguntado ao usuario se ele desejar confirmar a troca de acompanahnte    
            opcao= JOptionPane.showConfirmDialog(null,"O paciente já possui um acompanhante cadastrado, deseja realizar a troca de acompanhantes ? ","Confirmacao",JOptionPane.YES_NO_OPTION);    
            //se o usuario continuar com a troca, o cadastro segue normalmente 
            if(opcao==JOptionPane.YES_OPTION){
            //cadastrando o acompanhante no banco de dados (acompanhantes já tem a entrada liberada no momento do cadastro)     
            conexao.cadastrarAcompanhante(tabela, cpf, nome, sexo, idade, categoria,paciente,data,horario,"sim", connection);    
            //atualizando os dados do paciente com o novo acompanhante
            conexao.atualizarAcompanhante(tabela2, nome, cpf_consulta.getText(), connection);
            //exibindo uma menssagem de sucesso ao fim do cadastro
            JOptionPane.showMessageDialog(null, "Acompanhante cadastrado com sucesso");                          
            }
            else{
            //se o usuario escolher não, o cadastro é cancelado    
            JOptionPane.showMessageDialog(null, "Cadastro cancelado !");                             
            }           
}    }
            else{
            //se já ter sido realizado uma troca de acompanhante pra data recebida, um aviso é exibido    
            JOptionPane.showMessageDialog(null, "Só é permitido uma troca de acompanhante por dia ! ");                  
            }    
            }   
            //se o usuario estiver cadastrando um visitante, o programa segue por esse caminho
            else {
            //chamando o método que faz a verificação de quantas visitas estão agendadas na data selecionada    
            if(conexao.consultarVisitas(tabela, paciente,categoria, connection, data)<2){
            //se o método retornar menos de duas visitas agendadas naquela data, o programa chama o método que cadastra o visitante no banco de dados (visitantes precisam ter a entrada liberada posteriormente no menu "emitir carteira")   
            conexao.cadastrarAcompanhante(tabela, cpf, nome, sexo, idade, categoria,paciente,data,horario,"não", connection);    
            //exibindo menssagem de sucesso
            JOptionPane.showMessageDialog(null, "Visitante cadastrado com sucesso");                    
            } 
            else {
            //se já tiver duas visitas agendada naquela data, é exibido um aviso dizendo que a data não está disponivel    
            JOptionPane.showMessageDialog(null, "Data não disponivel !");                    

            }
                
            }
              //limpando todas as caixas de texto para o padrão  
              nome_cadastro.setText("");
              cpf_cadastro.setText("");
              idade_cadastro.setText("");
              categoria_cadastro.setSelectedIndex(0);
              sexo_cadastro.setSelectedIndex(0);
        }
        else{
        //se o usuario escolher "não" na caixa de seleção, o cadastro é cancelado    
            JOptionPane.showMessageDialog(null, "Cadastro cancelado !");                                
        }
            }
        
            } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Falha no cadastro ! Confirme os dados e verifique se estar tentando cadastrar um ID repetido, apos isso tente novamente ");
           // System.err.println();
            e.printStackTrace();}
                    
            
            
            // TODO add your handling code here:
        
    }//GEN-LAST:event_cadastrar_acompanhanteActionPerformed

    private void nome_cadastroPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nome_cadastroPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_nome_cadastroPropertyChange

    private void jFormattedTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField6ActionPerformed

    private void jFormattedTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField7ActionPerformed

    private void jFormattedTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField8ActionPerformed

    private void voltar_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltar_cadastroActionPerformed
                javax.swing.SwingUtilities.getWindowAncestor(voltar_cadastro).dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_voltar_cadastroActionPerformed

    private void jFormattedTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField9ActionPerformed

    private void cpf_consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpf_consultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpf_consultaActionPerformed

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed

        String jdbcUrl = "jdbc:mysql://localhost:3306/visitas?serverTimezone=America/Sao_Paulo";
        String username = "root";
        String password = "root";

        try (Connection connection = DriverManager.getConnection(jdbcUrl, username, password)) {

            String tabela = "visitas.paciente";
        long id = 0;
            try {
            //recebendo o cpf digitado pelo usuario    
            id = Long.parseLong(cpf_consulta.getText());
        }   catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Por favor, insira um número válido no campo CPF.");
            return; // Retorna para evitar a execução do restante do código
        }    
            //criando conexao com o banco de dados
            Conexao conexao = new Conexao();
            //realizando uma busca no bando de dados pelo id (cpf que foi recebido anteriormente)
            ResultSet resultadoId = conexao.buscarCPF(tabela, id, connection);            

            if (resultadoId.next()) {
                //exibindo o nome vinculado ao cpf
                String nome = resultadoId.getString("nome");
                nome_paciente.setText(nome);
            }
            else {
                //um aviso é exibido caso o cpf não for encontrado no banco de dados
                JOptionPane.showMessageDialog(null, "Paciente nao encontrado !");
                cpf_consulta.setText("");
                nome_paciente.setText("");

            }
        } catch (SQLException e) {
            e.printStackTrace();}
        }

        /*

        // TODO add your handling code here:
    }//GEN-LAST:event_consultarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar_acompanhante;
    private javax.swing.JComboBox<String> categoria_cadastro;
    private javax.swing.JButton consultar;
    private javax.swing.JFormattedTextField cpf_cadastro;
    private javax.swing.JFormattedTextField cpf_consulta;
    private com.toedter.calendar.JDateChooser data_cadastro;
    private javax.swing.JLabel fundo;
    private javax.swing.JComboBox<String> horario_cadastro;
    private javax.swing.JFormattedTextField idade_cadastro;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JFormattedTextField jFormattedTextField5;
    private javax.swing.JFormattedTextField jFormattedTextField6;
    private javax.swing.JFormattedTextField jFormattedTextField7;
    private javax.swing.JFormattedTextField jFormattedTextField8;
    private javax.swing.JFormattedTextField jFormattedTextField9;
    private javax.swing.JFormattedTextField nome_cadastro;
    private javax.swing.JFormattedTextField nome_paciente;
    private javax.swing.JComboBox<String> sexo_cadastro;
    private javax.swing.JButton voltar_cadastro;
    // End of variables declaration//GEN-END:variables
}
